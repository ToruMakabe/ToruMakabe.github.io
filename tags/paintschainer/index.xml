<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>re-imagine</title>
    <link>http://torumakabe.github.io/tags/paintschainer/index.xml</link>
    <description>Recent content on re-imagine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="http://torumakabe.github.io/tags/paintschainer/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Azure N-SeriesでPaintsChainerを動かす</title>
      <link>http://torumakabe.github.io/post/paintschainer_on_azure/</link>
      <pubDate>Fri, 03 Feb 2017 18:00:00 +0900</pubDate>
      
      <guid>http://torumakabe.github.io/post/paintschainer_on_azure/</guid>
      <description>

&lt;h2 id=&#34;paintschainer面白い&#34;&gt;PaintsChainer面白い&lt;/h2&gt;

&lt;p&gt;クラスメソッドさんのDevelopers.IOでのエントリ&lt;a href=&#34;http://dev.classmethod.jp/cloud/paintschainer-on-ec2/&#34;&gt;&amp;ldquo;PaintsChainerをAmazon EC2で動かしてみた&amp;rdquo;&lt;/a&gt;が、とても面白いです。&lt;/p&gt;

&lt;p&gt;畳みこみニューラルネットワークを駆使して白黒線画に色付けしちゃうPaintsChainerすごい。EC2のGPUインスタンスでさくっと動かせるのもいいですね。&lt;/p&gt;

&lt;p&gt;せっかくなのでAzureでもやってみようと思います。AzurerはN-Series &amp;amp; NDIVIA-Dockerのサンプルとして、Azurerでない人はUbuntuでPaintChainerを動かす参考手順として見ていただいてもいいかと。&lt;/p&gt;

&lt;h2 id=&#34;試した環境&#34;&gt;試した環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;米国中南部リージョン&lt;/li&gt;
&lt;li&gt;Standard NC6 (6 コア、56 GB メモリ、NVIDIA Tesla K80)&lt;/li&gt;
&lt;li&gt;Ubuntu 16.04&lt;/li&gt;
&lt;li&gt;NSGはSSH(22)の他にHTTP(80)を受信許可&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;導入手順&#34;&gt;導入手順&lt;/h2&gt;

&lt;h3 id=&#34;nvidia-tesla-driversのインストール&#34;&gt;NVIDIA Tesla driversのインストール&lt;/h3&gt;

&lt;p&gt;マイクロソフト公式ドキュメントの通りに導入します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-n-series-driver-setup&#34;&gt;Set up GPU drivers for N-series VMs&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;dockerのインストール&#34;&gt;Dockerのインストール&lt;/h3&gt;

&lt;p&gt;Docker公式ドキュメントの通りに導入します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/installation/linux/ubuntu/&#34;&gt;Get Docker for Ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;nvidia-dockerのインストール&#34;&gt;NVIDIA Dockerのインストール&lt;/h3&gt;

&lt;p&gt;GitHub上のNVIDIAのドキュメント通りに導入します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;NVIDIA Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ここまでの作業に問題がないか、確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo nvidia-docker run --rm nvidia/cuda nvidia-smi
Using default tag: latest
latest: Pulling from nvidia/cuda
8aec416115fd: Pull complete
[...]
Status: Downloaded newer image for nvidia/cuda:latest
Fri Feb  3 06:43:18 2017
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 367.48                 Driver Version: 367.48                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla K80           Off  | 86BF:00:00.0     Off |                    0 |
| N/A   34C    P8    33W / 149W |      0MiB / 11439MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;paintschainer-dockerのインストール&#34;&gt;PaintsChainer-Dockerのインストール&lt;/h3&gt;

&lt;p&gt;Liam Jones氏が公開している&lt;a href=&#34;https://github.com/liamjones/PaintsChainer-Docker&#34;&gt;PaintsChainer-Docker&lt;/a&gt;を使って、PainsChanierコンテナーを起動します。ポートマッピングはコンテナーホストの80番とコンテナーの8000番です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo nvidia-docker run -p 80:8000 liamjones/paintschainer-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;paintchainerを使ってみる&#34;&gt;PaintChainerを使ってみる&lt;/h2&gt;

&lt;p&gt;VMのパブリックIP、ポート80番にアクセスすると、先ほどコンテナーで起動したPaintChanerのページが開きます。クラウディアさんの白黒画像ファイルで試してみましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ToruMakabe/Images/master/paintschainer_cloudia.png&#34; alt=&#34;結果&#34; title=&#34;Cloudia&#34; /&gt;&lt;/p&gt;

&lt;p&gt;PaintsChainer、すごいなぁ。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>