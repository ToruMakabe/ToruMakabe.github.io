<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACI on re-imagine</title>
    <link>https://ToruMakabe.github.io/tags/aci/</link>
    <description>Recent content in ACI on re-imagine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright 2021 Toru Makabe</copyright>
    <lastBuildDate>Mon, 05 Jul 2021 14:00:00 +0900</lastBuildDate><atom:link href="https://ToruMakabe.github.io/tags/aci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Container Instancesの定期実行をAzure Functionsのタイマートリガーで行うパターン</title>
      <link>https://ToruMakabe.github.io/post/aci-runner-on-functions/</link>
      <pubDate>Mon, 05 Jul 2021 14:00:00 +0900</pubDate>
      
      <guid>https://ToruMakabe.github.io/post/aci-runner-on-functions/</guid>
      <description>何の話か ACI(Azure Container Instances)の定期実行を、Azure Functionsのタイマートリガーを使って行う場合、いくつか設計、実装上の考慮点が</description>
    </item>
    
    <item>
      <title>Azure Container InstancesのGraceful Shutdown事情</title>
      <link>https://ToruMakabe.github.io/post/aci_graceful_shutdown/</link>
      <pubDate>Wed, 03 Jul 2019 23:00:00 +0900</pubDate>
      
      <guid>https://ToruMakabe.github.io/post/aci_graceful_shutdown/</guid>
      <description>何の話か Azure Container Instances(ACI)はサクッとコンテナーを作れるところが幸せポイントですが、停止処理どうしてますか。クライアントとのコネ</description>
    </item>
    
  </channel>
</rss>
