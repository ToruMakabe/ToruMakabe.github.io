<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rbac on re-imagine</title>
    <link>http://torumakabe.github.io/tags/rbac/</link>
    <description>Recent content in Rbac on re-imagine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 22 Jan 2018 22:00:00 +0900</lastBuildDate>
    
	<atom:link href="http://torumakabe.github.io/tags/rbac/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Azureのリソースグループ限定 共同作成者をいい感じに作る</title>
      <link>http://torumakabe.github.io/post/azure_rg_contributor/</link>
      <pubDate>Mon, 22 Jan 2018 22:00:00 +0900</pubDate>
      
      <guid>http://torumakabe.github.io/post/azure_rg_contributor/</guid>
      <description>共同作成者は、ちょっと強い Azureのリソースグループは、リソースを任意のグループにまとめ、ライフサイクルや権限の管理を一括して行える便利なコンセプトです。
ユースケースのひとつに、&amp;rdquo;本番とは分離した開発向けリソースグループを作って、アプリ/インフラ開発者に開放したい&amp;rdquo;、があります。新しい技術は試行錯誤で身につくので、こういった環境は重要です。
なのですが、このようなケースで、権限付与の落とし穴があります。
 サブスクリプション所有者が開発用リソースグループを作る スコープを開発用リソースグループに限定し、開発者に対し共同作成者ロールを割り当てる 開発者はリソースグループ限定で、のびのび試行錯誤できて幸せ 開発者がスッキリしたくなり、リソースグループごとバッサリ削除 (共同作成者なので可能) 開発者にはサブスクリプションレベルの権限がないため、リソースグループを作成できない 詰む サブスクリプション所有者が、リソースグループ作成と権限付与をやり直し  共同作成者ロールから、リソースグループの削除権限だけを除外できると、いいんですが。そこでカスタムロールの出番です。リソースグループ限定、グループ削除権限なしの共同作成者を作ってみましょう。
いい感じのカスタムロールを作る Azureのカスタムロールは、個別リソースレベルで粒度の細かい権限設定ができます。ですが、やり過ぎると破綻するため、シンプルなロールを最小限作る、がおすすめです。
シンプルに行きましょう。まずはカスタムロールの定義を作ります。role.jsonとします。
{ &amp;quot;Name&amp;quot;: &amp;quot;Resource Group Contributor&amp;quot;, &amp;quot;IsCustom&amp;quot;: true, &amp;quot;Description&amp;quot;: &amp;quot;Lets you manage everything except access to resources, but can not delete Resouce Group&amp;quot;, &amp;quot;Actions&amp;quot;: [ &amp;quot;*&amp;quot; ], &amp;quot;NotActions&amp;quot;: [ &amp;quot;Microsoft.Authorization/*/Delete&amp;quot;, &amp;quot;Microsoft.Authorization/*/Write&amp;quot;, &amp;quot;Microsoft.Authorization/elevateAccess/Action&amp;quot;, &amp;quot;Microsoft.Resources/subscriptions/resourceGroups/Delete&amp;quot; ], &amp;quot;AssignableScopes&amp;quot;: [ &amp;quot;/subscriptions/your-subscriotion-id&amp;quot; ] }  組み込みロールの共同作成者をテンプレに、NotActionsでリソースグループの削除権限を除外しました。AssignableScopesでリソースグループを限定してもいいですが、リソースグループの数だけロールを作るのはつらいので、ここでは指定しません。後からロールを割り当てる時にスコープを指定します。
では、カスタムロールを作成します。
$ az role definition create --role-definition ./role.json  出力にカスタムロールのIDが入っていますので、控えておきます。
&amp;quot;id&amp;quot;: &amp;quot;/subscriptions/your-subscriotion-id/providers/Microsoft.</description>
    </item>
    
  </channel>
</rss>